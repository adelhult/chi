name: Deploy playground

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./playground
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install Rust toolchain (wasm32-unknown-unknown)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
      - name: Install website dependencies
        run: npm ci
      - name: Build WASM bindings
        run: npm run wasm
      - name: Run vite dev task before building
        run: grep -m 1 "VITE" <(npm run dev) # this is such a hack but it makes the vite wasm-pack plugin happy
      - name: Build static site
        run: npm run build --base=/chi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./playground/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2